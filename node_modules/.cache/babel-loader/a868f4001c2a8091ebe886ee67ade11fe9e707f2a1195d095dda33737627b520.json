{"ast":null,"code":"import _objectSpread from \"/Users/shubhamsingh/Projects/riny-designs/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { defineComponent, ref, reactive, computed, nextTick, onMounted, watch, provide, openBlock, createBlock, unref, withCtx, withDirectives, createElementBlock, withKeys, createElementVNode, normalizeClass, createVNode, createCommentVNode, createTextVNode, toDisplayString, normalizeStyle, vShow } from 'vue';\nimport { debounce } from 'lodash-unified';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../directives/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport '../../form/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { ArrowDown, Close } from '@element-plus/icons-vue';\nimport AlphaSlider from './components/alpha-slider.mjs';\nimport HueSlider from './components/hue-slider.mjs';\nimport Predefine from './components/predefine.mjs';\nimport SvPanel from './components/sv-panel.mjs';\nimport Color from './utils/color.mjs';\nimport { colorPickerProps, colorPickerEmits, colorPickerContextKey } from './color-picker.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormItem, useFormItemInputId } from '../../form/src/hooks/use-form-item.mjs';\nimport { useFormSize, useFormDisabled } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { useFocusController } from '../../../hooks/use-focus-controller/index.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nvar _hoisted_1 = [\"onKeydown\"];\nvar _hoisted_2 = [\"id\", \"aria-label\", \"aria-labelledby\", \"aria-description\", \"aria-disabled\", \"tabindex\"];\nvar __default__ = defineComponent({\n  name: \"ElColorPicker\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: colorPickerProps,\n  emits: colorPickerEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var ns = useNamespace(\"color\");\n    var _useFormItem = useFormItem(),\n      formItem = _useFormItem.formItem;\n    var colorSize = useFormSize();\n    var colorDisabled = useFormDisabled();\n    var _useFormItemInputId = useFormItemInputId(props, {\n        formItemContext: formItem\n      }),\n      buttonId = _useFormItemInputId.inputId,\n      isLabeledByFormItem = _useFormItemInputId.isLabeledByFormItem;\n    var hue = ref();\n    var sv = ref();\n    var alpha = ref();\n    var popper = ref();\n    var triggerRef = ref();\n    var inputRef = ref();\n    var _useFocusController = useFocusController(triggerRef, {\n        beforeBlur: function beforeBlur(event) {\n          var _a;\n          return (_a = popper.value) == null ? void 0 : _a.isFocusInsideContent(event);\n        },\n        afterBlur: function afterBlur() {\n          setShowPicker(false);\n          resetColor();\n        }\n      }),\n      isFocused = _useFocusController.isFocused,\n      _handleFocus = _useFocusController.handleFocus,\n      handleBlur = _useFocusController.handleBlur;\n    var handleFocus = function handleFocus(event) {\n      if (colorDisabled.value) return blur();\n      _handleFocus(event);\n    };\n    var shouldActiveChange = true;\n    var color = reactive(new Color({\n      enableAlpha: props.showAlpha,\n      format: props.colorFormat || \"\",\n      value: props.modelValue\n    }));\n    var showPicker = ref(false);\n    var showPanelColor = ref(false);\n    var customInput = ref(\"\");\n    var displayedColor = computed(function () {\n      if (!props.modelValue && !showPanelColor.value) {\n        return \"transparent\";\n      }\n      return displayedRgb(color, props.showAlpha);\n    });\n    var currentColor = computed(function () {\n      return !props.modelValue && !showPanelColor.value ? \"\" : color.value;\n    });\n    var buttonAriaLabel = computed(function () {\n      return !isLabeledByFormItem.value ? props.label || t(\"el.colorpicker.defaultLabel\") : void 0;\n    });\n    var buttonAriaLabelledby = computed(function () {\n      return isLabeledByFormItem.value ? formItem == null ? void 0 : formItem.labelId : void 0;\n    });\n    var btnKls = computed(function () {\n      return [ns.b(\"picker\"), ns.is(\"disabled\", colorDisabled.value), ns.bm(\"picker\", colorSize.value), ns.is(\"focused\", isFocused.value)];\n    });\n    function displayedRgb(color2, showAlpha) {\n      if (!(color2 instanceof Color)) {\n        throw new TypeError(\"color should be instance of _color Class\");\n      }\n      var _color2$toRgb = color2.toRgb(),\n        r = _color2$toRgb.r,\n        g = _color2$toRgb.g,\n        b = _color2$toRgb.b;\n      return showAlpha ? \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(color2.get(\"alpha\") / 100, \")\") : \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n    }\n    function setShowPicker(value) {\n      showPicker.value = value;\n    }\n    var debounceSetShowPicker = debounce(setShowPicker, 100, {\n      leading: true\n    });\n    function show() {\n      if (colorDisabled.value) return;\n      setShowPicker(true);\n    }\n    function hide() {\n      debounceSetShowPicker(false);\n      resetColor();\n    }\n    function resetColor() {\n      nextTick(function () {\n        if (props.modelValue) {\n          color.fromString(props.modelValue);\n        } else {\n          color.value = \"\";\n          nextTick(function () {\n            showPanelColor.value = false;\n          });\n        }\n      });\n    }\n    function handleTrigger() {\n      if (colorDisabled.value) return;\n      debounceSetShowPicker(!showPicker.value);\n    }\n    function handleConfirm() {\n      color.fromString(customInput.value);\n    }\n    function confirmValue() {\n      var value = color.value;\n      emit(UPDATE_MODEL_EVENT, value);\n      emit(\"change\", value);\n      if (props.validateEvent) {\n        formItem == null ? void 0 : formItem.validate(\"change\")[\"catch\"](function (err) {\n          return debugWarn(err);\n        });\n      }\n      debounceSetShowPicker(false);\n      nextTick(function () {\n        var newColor = new Color({\n          enableAlpha: props.showAlpha,\n          format: props.colorFormat || \"\",\n          value: props.modelValue\n        });\n        if (!color.compare(newColor)) {\n          resetColor();\n        }\n      });\n    }\n    function clear() {\n      debounceSetShowPicker(false);\n      emit(UPDATE_MODEL_EVENT, null);\n      emit(\"change\", null);\n      if (props.modelValue !== null && props.validateEvent) {\n        formItem == null ? void 0 : formItem.validate(\"change\")[\"catch\"](function (err) {\n          return debugWarn(err);\n        });\n      }\n      resetColor();\n    }\n    function handleClickOutside(event) {\n      if (!showPicker.value) return;\n      hide();\n      if (isFocused.value) {\n        var _event = new FocusEvent(\"focus\", event);\n        handleBlur(_event);\n      }\n    }\n    function handleEsc(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      setShowPicker(false);\n      resetColor();\n    }\n    function handleKeyDown(event) {\n      switch (event.code) {\n        case EVENT_CODE.enter:\n        case EVENT_CODE.space:\n          event.preventDefault();\n          event.stopPropagation();\n          show();\n          inputRef.value.focus();\n          break;\n        case EVENT_CODE.esc:\n          handleEsc(event);\n          break;\n      }\n    }\n    function focus() {\n      triggerRef.value.focus();\n    }\n    function blur() {\n      triggerRef.value.blur();\n    }\n    onMounted(function () {\n      if (props.modelValue) {\n        customInput.value = currentColor.value;\n      }\n    });\n    watch(function () {\n      return props.modelValue;\n    }, function (newVal) {\n      if (!newVal) {\n        showPanelColor.value = false;\n      } else if (newVal && newVal !== color.value) {\n        shouldActiveChange = false;\n        color.fromString(newVal);\n      }\n    });\n    watch(function () {\n      return currentColor.value;\n    }, function (val) {\n      customInput.value = val;\n      shouldActiveChange && emit(\"activeChange\", val);\n      shouldActiveChange = true;\n    });\n    watch(function () {\n      return color.value;\n    }, function () {\n      if (!props.modelValue && !showPanelColor.value) {\n        showPanelColor.value = true;\n      }\n    });\n    watch(function () {\n      return showPicker.value;\n    }, function () {\n      nextTick(function () {\n        var _a, _b, _c;\n        (_a = hue.value) == null ? void 0 : _a.update();\n        (_b = sv.value) == null ? void 0 : _b.update();\n        (_c = alpha.value) == null ? void 0 : _c.update();\n      });\n    });\n    provide(colorPickerContextKey, {\n      currentColor: currentColor\n    });\n    expose({\n      color: color,\n      show: show,\n      hide: hide,\n      focus: focus,\n      blur: blur\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(unref(ElTooltip), {\n        ref_key: \"popper\",\n        ref: popper,\n        visible: showPicker.value,\n        \"show-arrow\": false,\n        \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n        offset: 0,\n        \"gpu-acceleration\": false,\n        \"popper-class\": [unref(ns).be(\"picker\", \"panel\"), unref(ns).b(\"dropdown\"), _ctx.popperClass],\n        \"stop-popper-mouse-event\": false,\n        effect: \"light\",\n        trigger: \"click\",\n        transition: \"\".concat(unref(ns).namespace.value, \"-zoom-in-top\"),\n        persistent: \"\",\n        onHide: _cache[2] || (_cache[2] = function ($event) {\n          return setShowPicker(false);\n        })\n      }, {\n        content: withCtx(function () {\n          return [withDirectives((openBlock(), createElementBlock(\"div\", {\n            onKeydown: withKeys(handleEsc, [\"esc\"])\n          }, [createElementVNode(\"div\", {\n            \"class\": normalizeClass(unref(ns).be(\"dropdown\", \"main-wrapper\"))\n          }, [createVNode(HueSlider, {\n            ref_key: \"hue\",\n            ref: hue,\n            \"class\": \"hue-slider\",\n            color: unref(color),\n            vertical: \"\"\n          }, null, 8, [\"color\"]), createVNode(SvPanel, {\n            ref_key: \"sv\",\n            ref: sv,\n            color: unref(color)\n          }, null, 8, [\"color\"])], 2), _ctx.showAlpha ? (openBlock(), createBlock(AlphaSlider, {\n            key: 0,\n            ref_key: \"alpha\",\n            ref: alpha,\n            color: unref(color)\n          }, null, 8, [\"color\"])) : createCommentVNode(\"v-if\", true), _ctx.predefine ? (openBlock(), createBlock(Predefine, {\n            key: 1,\n            ref: \"predefine\",\n            color: unref(color),\n            colors: _ctx.predefine\n          }, null, 8, [\"color\", \"colors\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n            \"class\": normalizeClass(unref(ns).be(\"dropdown\", \"btns\"))\n          }, [createElementVNode(\"span\", {\n            \"class\": normalizeClass(unref(ns).be(\"dropdown\", \"value\"))\n          }, [createVNode(unref(ElInput), {\n            ref_key: \"inputRef\",\n            ref: inputRef,\n            modelValue: customInput.value,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return customInput.value = $event;\n            }),\n            \"validate-event\": false,\n            size: \"small\",\n            onKeyup: withKeys(handleConfirm, [\"enter\"]),\n            onBlur: handleConfirm\n          }, null, 8, [\"modelValue\", \"onKeyup\"])], 2), createVNode(unref(ElButton), {\n            \"class\": normalizeClass(unref(ns).be(\"dropdown\", \"link-btn\")),\n            text: \"\",\n            size: \"small\",\n            onClick: clear\n          }, {\n            \"default\": withCtx(function () {\n              return [createTextVNode(toDisplayString(unref(t)(\"el.colorpicker.clear\")), 1)];\n            }),\n            _: 1\n          }, 8, [\"class\"]), createVNode(unref(ElButton), {\n            plain: \"\",\n            size: \"small\",\n            \"class\": normalizeClass(unref(ns).be(\"dropdown\", \"btn\")),\n            onClick: confirmValue\n          }, {\n            \"default\": withCtx(function () {\n              return [createTextVNode(toDisplayString(unref(t)(\"el.colorpicker.confirm\")), 1)];\n            }),\n            _: 1\n          }, 8, [\"class\"])], 2)], 40, _hoisted_1)), [[unref(ClickOutside), handleClickOutside]])];\n        }),\n        \"default\": withCtx(function () {\n          return [createElementVNode(\"div\", {\n            id: unref(buttonId),\n            ref_key: \"triggerRef\",\n            ref: triggerRef,\n            \"class\": normalizeClass(unref(btnKls)),\n            role: \"button\",\n            \"aria-label\": unref(buttonAriaLabel),\n            \"aria-labelledby\": unref(buttonAriaLabelledby),\n            \"aria-description\": unref(t)(\"el.colorpicker.description\", {\n              color: _ctx.modelValue || \"\"\n            }),\n            \"aria-disabled\": unref(colorDisabled),\n            tabindex: unref(colorDisabled) ? -1 : _ctx.tabindex,\n            onKeydown: handleKeyDown,\n            onFocus: handleFocus,\n            onBlur: _cache[1] || (_cache[1] = function () {\n              return unref(handleBlur) && unref(handleBlur).apply(void 0, arguments);\n            })\n          }, [unref(colorDisabled) ? (openBlock(), createElementBlock(\"div\", {\n            key: 0,\n            \"class\": normalizeClass(unref(ns).be(\"picker\", \"mask\"))\n          }, null, 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n            \"class\": normalizeClass(unref(ns).be(\"picker\", \"trigger\")),\n            onClick: handleTrigger\n          }, [createElementVNode(\"span\", {\n            \"class\": normalizeClass([unref(ns).be(\"picker\", \"color\"), unref(ns).is(\"alpha\", _ctx.showAlpha)])\n          }, [createElementVNode(\"span\", {\n            \"class\": normalizeClass(unref(ns).be(\"picker\", \"color-inner\")),\n            style: normalizeStyle({\n              backgroundColor: unref(displayedColor)\n            })\n          }, [withDirectives(createVNode(unref(ElIcon), {\n            \"class\": normalizeClass([unref(ns).be(\"picker\", \"icon\"), unref(ns).is(\"icon-arrow-down\")])\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(unref(ArrowDown))];\n            }),\n            _: 1\n          }, 8, [\"class\"]), [[vShow, _ctx.modelValue || showPanelColor.value]]), withDirectives(createVNode(unref(ElIcon), {\n            \"class\": normalizeClass([unref(ns).be(\"picker\", \"empty\"), unref(ns).is(\"icon-close\")])\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(unref(Close))];\n            }),\n            _: 1\n          }, 8, [\"class\"]), [[vShow, !_ctx.modelValue && !showPanelColor.value]])], 6)], 2)], 2)], 42, _hoisted_2)];\n        }),\n        _: 1\n      }, 8, [\"visible\", \"popper-class\", \"transition\"]);\n    };\n  }\n}));\nvar ColorPicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"color-picker.vue\"]]);\nexport { ColorPicker as default };","map":{"version":3,"names":["name","_useLocale","useLocale","t","ns","useNamespace","_useFormItem","useFormItem","formItem","colorSize","useFormSize","colorDisabled","useFormDisabled","_useFormItemInputId","useFormItemInputId","props","formItemContext","buttonId","inputId","isLabeledByFormItem","hue","ref","sv","alpha","popper","triggerRef","inputRef","_useFocusController","useFocusController","beforeBlur","event","_a","value","isFocusInsideContent","afterBlur","setShowPicker","resetColor","isFocused","_handleFocus","handleFocus","handleBlur","blur","shouldActiveChange","color","reactive","Color","enableAlpha","showAlpha","format","colorFormat","modelValue","showPicker","showPanelColor","customInput","displayedColor","computed","displayedRgb","currentColor","buttonAriaLabel","label","buttonAriaLabelledby","labelId","btnKls","b","is","bm","color2","TypeError","_color2$toRgb","toRgb","r","g","concat","get","debounceSetShowPicker","debounce","leading","show","hide","nextTick","fromString","handleTrigger","handleConfirm","confirmValue","emit","UPDATE_MODEL_EVENT","validateEvent","validate","err","debugWarn","newColor","compare","clear","handleClickOutside","_event","FocusEvent","handleEsc","preventDefault","stopPropagation","handleKeyDown","code","EVENT_CODE","enter","space","focus","esc","onMounted","watch","newVal","val","_b","_c","update","provide","colorPickerContextKey","expose"],"sources":["../../../../../../packages/components/color-picker/src/color-picker.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"popper\"\n    :visible=\"showPicker\"\n    :show-arrow=\"false\"\n    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n    :offset=\"0\"\n    :gpu-acceleration=\"false\"\n    :popper-class=\"[ns.be('picker', 'panel'), ns.b('dropdown'), popperClass]\"\n    :stop-popper-mouse-event=\"false\"\n    effect=\"light\"\n    trigger=\"click\"\n    :transition=\"`${ns.namespace.value}-zoom-in-top`\"\n    persistent\n    @hide=\"setShowPicker(false)\"\n  >\n    <template #content>\n      <div v-click-outside=\"handleClickOutside\" @keydown.esc=\"handleEsc\">\n        <div :class=\"ns.be('dropdown', 'main-wrapper')\">\n          <hue-slider ref=\"hue\" class=\"hue-slider\" :color=\"color\" vertical />\n          <sv-panel ref=\"sv\" :color=\"color\" />\n        </div>\n        <alpha-slider v-if=\"showAlpha\" ref=\"alpha\" :color=\"color\" />\n        <predefine\n          v-if=\"predefine\"\n          ref=\"predefine\"\n          :color=\"color\"\n          :colors=\"predefine\"\n        />\n        <div :class=\"ns.be('dropdown', 'btns')\">\n          <span :class=\"ns.be('dropdown', 'value')\">\n            <el-input\n              ref=\"inputRef\"\n              v-model=\"customInput\"\n              :validate-event=\"false\"\n              size=\"small\"\n              @keyup.enter=\"handleConfirm\"\n              @blur=\"handleConfirm\"\n            />\n          </span>\n          <el-button\n            :class=\"ns.be('dropdown', 'link-btn')\"\n            text\n            size=\"small\"\n            @click=\"clear\"\n          >\n            {{ t('el.colorpicker.clear') }}\n          </el-button>\n          <el-button\n            plain\n            size=\"small\"\n            :class=\"ns.be('dropdown', 'btn')\"\n            @click=\"confirmValue\"\n          >\n            {{ t('el.colorpicker.confirm') }}\n          </el-button>\n        </div>\n      </div>\n    </template>\n    <template #default>\n      <div\n        :id=\"buttonId\"\n        ref=\"triggerRef\"\n        :class=\"btnKls\"\n        role=\"button\"\n        :aria-label=\"buttonAriaLabel\"\n        :aria-labelledby=\"buttonAriaLabelledby\"\n        :aria-description=\"\n          t('el.colorpicker.description', { color: modelValue || '' })\n        \"\n        :aria-disabled=\"colorDisabled\"\n        :tabindex=\"colorDisabled ? -1 : tabindex\"\n        @keydown=\"handleKeyDown\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n      >\n        <div v-if=\"colorDisabled\" :class=\"ns.be('picker', 'mask')\" />\n        <div :class=\"ns.be('picker', 'trigger')\" @click=\"handleTrigger\">\n          <span :class=\"[ns.be('picker', 'color'), ns.is('alpha', showAlpha)]\">\n            <span\n              :class=\"ns.be('picker', 'color-inner')\"\n              :style=\"{\n                backgroundColor: displayedColor,\n              }\"\n            >\n              <el-icon\n                v-show=\"modelValue || showPanelColor\"\n                :class=\"[ns.be('picker', 'icon'), ns.is('icon-arrow-down')]\"\n              >\n                <arrow-down />\n              </el-icon>\n              <el-icon\n                v-show=\"!modelValue && !showPanelColor\"\n                :class=\"[ns.be('picker', 'empty'), ns.is('icon-close')]\"\n              >\n                <close />\n              </el-icon>\n            </span>\n          </span>\n        </div>\n      </div>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  watch,\n} from 'vue'\nimport { debounce } from 'lodash-unified'\nimport { ElButton } from '@element-plus/components/button'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ClickOutside as vClickOutside } from '@element-plus/directives'\nimport { ElTooltip } from '@element-plus/components/tooltip'\nimport { ElInput } from '@element-plus/components/input'\nimport {\n  useFormDisabled,\n  useFormItem,\n  useFormItemInputId,\n  useFormSize,\n} from '@element-plus/components/form'\nimport {\n  useFocusController,\n  useLocale,\n  useNamespace,\n} from '@element-plus/hooks'\nimport { EVENT_CODE, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { debugWarn } from '@element-plus/utils'\nimport { ArrowDown, Close } from '@element-plus/icons-vue'\nimport AlphaSlider from './components/alpha-slider.vue'\nimport HueSlider from './components/hue-slider.vue'\nimport Predefine from './components/predefine.vue'\nimport SvPanel from './components/sv-panel.vue'\nimport Color from './utils/color'\nimport {\n  colorPickerContextKey,\n  colorPickerEmits,\n  colorPickerProps,\n} from './color-picker'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\n\ndefineOptions({\n  name: 'ElColorPicker',\n})\nconst props = defineProps(colorPickerProps)\nconst emit = defineEmits(colorPickerEmits)\n\nconst { t } = useLocale()\nconst ns = useNamespace('color')\nconst { formItem } = useFormItem()\nconst colorSize = useFormSize()\nconst colorDisabled = useFormDisabled()\n\nconst { inputId: buttonId, isLabeledByFormItem } = useFormItemInputId(props, {\n  formItemContext: formItem,\n})\n\nconst hue = ref<InstanceType<typeof HueSlider>>()\nconst sv = ref<InstanceType<typeof SvPanel>>()\nconst alpha = ref<InstanceType<typeof AlphaSlider>>()\nconst popper = ref<TooltipInstance>()\nconst triggerRef = ref()\nconst inputRef = ref()\n\nconst {\n  isFocused,\n  handleFocus: _handleFocus,\n  handleBlur,\n} = useFocusController(triggerRef, {\n  beforeBlur(event) {\n    return popper.value?.isFocusInsideContent(event)\n  },\n  afterBlur() {\n    setShowPicker(false)\n    resetColor()\n  },\n})\n\nconst handleFocus = (event: FocusEvent) => {\n  if (colorDisabled.value) return blur()\n  _handleFocus(event)\n}\n\n// active-change is used to prevent modelValue changes from triggering.\nlet shouldActiveChange = true\n\nconst color = reactive(\n  new Color({\n    enableAlpha: props.showAlpha,\n    format: props.colorFormat || '',\n    value: props.modelValue,\n  })\n) as Color\n\nconst showPicker = ref(false)\nconst showPanelColor = ref(false)\nconst customInput = ref('')\n\nconst displayedColor = computed(() => {\n  if (!props.modelValue && !showPanelColor.value) {\n    return 'transparent'\n  }\n  return displayedRgb(color, props.showAlpha)\n})\n\nconst currentColor = computed(() => {\n  return !props.modelValue && !showPanelColor.value ? '' : color.value\n})\n\nconst buttonAriaLabel = computed<string | undefined>(() => {\n  return !isLabeledByFormItem.value\n    ? props.label || t('el.colorpicker.defaultLabel')\n    : undefined\n})\n\nconst buttonAriaLabelledby = computed<string | undefined>(() => {\n  return isLabeledByFormItem.value ? formItem?.labelId : undefined\n})\n\nconst btnKls = computed(() => {\n  return [\n    ns.b('picker'),\n    ns.is('disabled', colorDisabled.value),\n    ns.bm('picker', colorSize.value),\n    ns.is('focused', isFocused.value),\n  ]\n})\n\nfunction displayedRgb(color: Color, showAlpha: boolean) {\n  if (!(color instanceof Color)) {\n    throw new TypeError('color should be instance of _color Class')\n  }\n\n  const { r, g, b } = color.toRgb()\n  return showAlpha\n    ? `rgba(${r}, ${g}, ${b}, ${color.get('alpha') / 100})`\n    : `rgb(${r}, ${g}, ${b})`\n}\n\nfunction setShowPicker(value: boolean) {\n  showPicker.value = value\n}\n\nconst debounceSetShowPicker = debounce(setShowPicker, 100, { leading: true })\n\nfunction show() {\n  if (colorDisabled.value) return\n  setShowPicker(true)\n}\n\nfunction hide() {\n  debounceSetShowPicker(false)\n  resetColor()\n}\n\nfunction resetColor() {\n  nextTick(() => {\n    if (props.modelValue) {\n      color.fromString(props.modelValue)\n    } else {\n      color.value = ''\n      nextTick(() => {\n        showPanelColor.value = false\n      })\n    }\n  })\n}\n\nfunction handleTrigger() {\n  if (colorDisabled.value) return\n  debounceSetShowPicker(!showPicker.value)\n}\n\nfunction handleConfirm() {\n  color.fromString(customInput.value)\n}\n\nfunction confirmValue() {\n  const value = color.value\n  emit(UPDATE_MODEL_EVENT, value)\n  emit('change', value)\n  if (props.validateEvent) {\n    formItem?.validate('change').catch((err) => debugWarn(err))\n  }\n  debounceSetShowPicker(false)\n  // check if modelValue change, if not change, then reset color.\n  nextTick(() => {\n    const newColor = new Color({\n      enableAlpha: props.showAlpha,\n      format: props.colorFormat || '',\n      value: props.modelValue,\n    })\n    if (!color.compare(newColor)) {\n      resetColor()\n    }\n  })\n}\n\nfunction clear() {\n  debounceSetShowPicker(false)\n  emit(UPDATE_MODEL_EVENT, null)\n  emit('change', null)\n  if (props.modelValue !== null && props.validateEvent) {\n    formItem?.validate('change').catch((err) => debugWarn(err))\n  }\n  resetColor()\n}\n\nfunction handleClickOutside(event: Event) {\n  if (!showPicker.value) return\n  hide()\n\n  if (isFocused.value) {\n    const _event = new FocusEvent('focus', event)\n    handleBlur(_event)\n  }\n}\n\nfunction handleEsc(event: KeyboardEvent) {\n  event.preventDefault()\n  event.stopPropagation()\n  setShowPicker(false)\n  resetColor()\n}\n\nfunction handleKeyDown(event: KeyboardEvent) {\n  switch (event.code) {\n    case EVENT_CODE.enter:\n    case EVENT_CODE.space:\n      event.preventDefault()\n      event.stopPropagation()\n      show()\n      inputRef.value.focus()\n      break\n    case EVENT_CODE.esc:\n      handleEsc(event)\n      break\n  }\n}\n\nfunction focus() {\n  triggerRef.value.focus()\n}\n\nfunction blur() {\n  triggerRef.value.blur()\n}\n\nonMounted(() => {\n  if (props.modelValue) {\n    customInput.value = currentColor.value\n  }\n})\n\nwatch(\n  () => props.modelValue,\n  (newVal) => {\n    if (!newVal) {\n      showPanelColor.value = false\n    } else if (newVal && newVal !== color.value) {\n      shouldActiveChange = false\n      color.fromString(newVal)\n    }\n  }\n)\n\nwatch(\n  () => currentColor.value,\n  (val) => {\n    customInput.value = val\n    shouldActiveChange && emit('activeChange', val)\n    shouldActiveChange = true\n  }\n)\n\nwatch(\n  () => color.value,\n  () => {\n    if (!props.modelValue && !showPanelColor.value) {\n      showPanelColor.value = true\n    }\n  }\n)\n\nwatch(\n  () => showPicker.value,\n  () => {\n    nextTick(() => {\n      hue.value?.update()\n      sv.value?.update()\n      alpha.value?.update()\n    })\n  }\n)\n\nprovide(colorPickerContextKey, {\n  currentColor,\n})\n\ndefineExpose({\n  /**\n   * @description current color object\n   */\n  color,\n  /**\n   * @description manually show ColorPicker\n   */\n  show,\n  /**\n   * @description manually hide ColorPicker\n   */\n  hide,\n  /**\n   * @description focus the input element\n   */\n  focus,\n  /**\n   * @description blur the input element\n   */\n  blur,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
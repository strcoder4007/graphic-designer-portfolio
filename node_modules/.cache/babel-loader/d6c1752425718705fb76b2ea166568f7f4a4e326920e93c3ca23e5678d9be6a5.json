{"ast":null,"code":"import _objectSpread from \"/Users/shubhamsingh/Projects/riny-designs/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, renderSlot, createVNode, Transition, withCtx, withDirectives, createElementVNode, toDisplayString, vShow } from 'vue';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { badgeProps } from './badge.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isNumber } from '../../../utils/types.mjs';\nvar _hoisted_1 = [\"textContent\"];\nvar __default__ = defineComponent({\n  name: \"ElBadge\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: badgeProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var ns = useNamespace(\"badge\");\n    var content = computed(function () {\n      if (props.isDot) return \"\";\n      if (isNumber(props.value) && isNumber(props.max)) {\n        return props.max < props.value ? \"\".concat(props.max, \"+\") : \"\".concat(props.value);\n      }\n      return \"\".concat(props.value);\n    });\n    expose({\n      content: content\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass(unref(ns).b())\n      }, [renderSlot(_ctx.$slots, \"default\"), createVNode(Transition, {\n        name: \"\".concat(unref(ns).namespace.value, \"-zoom-in-center\"),\n        persisted: \"\"\n      }, {\n        \"default\": withCtx(function () {\n          return [withDirectives(createElementVNode(\"sup\", {\n            \"class\": normalizeClass([unref(ns).e(\"content\"), unref(ns).em(\"content\", _ctx.type), unref(ns).is(\"fixed\", !!_ctx.$slots[\"default\"]), unref(ns).is(\"dot\", _ctx.isDot)]),\n            textContent: toDisplayString(unref(content))\n          }, null, 10, _hoisted_1), [[vShow, !_ctx.hidden && (unref(content) || _ctx.isDot)]])];\n        }),\n        _: 1\n      }, 8, [\"name\"])], 2);\n    };\n  }\n}));\nvar Badge = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"badge.vue\"]]);\nexport { Badge as default };","map":{"version":3,"names":["name","ns","useNamespace","content","computed","props","isDot","isNumber","value","max","concat","expose"],"sources":["../../../../../../packages/components/badge/src/badge.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <slot />\n    <transition :name=\"`${ns.namespace.value}-zoom-in-center`\">\n      <sup\n        v-show=\"!hidden && (content || isDot)\"\n        :class=\"[\n          ns.e('content'),\n          ns.em('content', type),\n          ns.is('fixed', !!$slots.default),\n          ns.is('dot', isDot),\n        ]\"\n        v-text=\"content\"\n      />\n    </transition>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { isNumber } from '@element-plus/utils'\nimport { badgeProps } from './badge'\n\ndefineOptions({\n  name: 'ElBadge',\n})\n\nconst props = defineProps(badgeProps)\n\nconst ns = useNamespace('badge')\n\nconst content = computed<string>(() => {\n  if (props.isDot) return ''\n\n  if (isNumber(props.value) && isNumber(props.max)) {\n    return props.max < props.value ? `${props.max}+` : `${props.value}`\n  }\n  return `${props.value}`\n})\n\ndefineExpose({\n  /** @description badge content */\n  content,\n})\n</script>\n"],"mappings":";;;;;;;;;iCAwBc;EACZA,IAAM;AACR;;;;;;IAIM,IAAAC,EAAA,GAAKC,YAAA,CAAa,OAAO;IAEzB,IAAAC,OAAA,GAAUC,QAAA,CAAiB,YAAM;MACrC,IAAIC,KAAM,CAAAC,KAAA,EAAc;MAExB,IAAIC,QAAA,CAASF,KAAM,CAAAG,KAAK,KAAKD,QAAS,CAAAF,KAAA,CAAMI,GAAG,CAAG;QACzC,OAAAJ,KAAA,CAAMI,GAAA,GAAMJ,KAAM,CAAAG,KAAA,MAAAE,MAAA,CAAWL,KAAM,CAAAI,GAAA,YAAAC,MAAA,CAAYL,KAAM,CAAAG,KAAA;MAAA;MAE9D,UAAAE,MAAA,CAAUL,KAAM,CAAAG,KAAA;IAAA,CACjB;IAEYG,MAAA;MAEXR,OAAA,EAAAA;IAAA,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}
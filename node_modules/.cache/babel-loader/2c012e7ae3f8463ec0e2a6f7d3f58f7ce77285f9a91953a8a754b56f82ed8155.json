{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { defineComponent, inject, ref, computed, watch, toRaw, unref, createVNode, mergeProps } from 'vue';\nimport { get } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport '../../virtual-list/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../constants/index.mjs';\nimport GroupItem from './group-item.mjs';\nimport OptionItem from './option-item.mjs';\nimport { useProps } from './useProps.mjs';\nimport { selectV2InjectionKey } from './token.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isUndefined } from '../../../utils/types.mjs';\nimport { isObject } from '@vue/shared';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport FixedSizeList from '../../virtual-list/src/components/fixed-size-list.mjs';\nimport DynamicSizeList from '../../virtual-list/src/components/dynamic-size-list.mjs';\nvar ElSelectMenu = defineComponent({\n  name: \"ElSelectDropdown\",\n  props: {\n    data: {\n      type: Array,\n      required: true\n    },\n    hoveringIndex: Number,\n    width: Number\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n      expose = _ref.expose;\n    var select = inject(selectV2InjectionKey);\n    var ns = useNamespace(\"select\");\n    var _useProps = useProps(select.props),\n      getLabel = _useProps.getLabel,\n      getValue = _useProps.getValue,\n      getDisabled = _useProps.getDisabled;\n    var cachedHeights = ref([]);\n    var listRef = ref();\n    var size = computed(function () {\n      return props.data.length;\n    });\n    watch(function () {\n      return size.value;\n    }, function () {\n      var _a, _b;\n      (_b = (_a = select.popper.value).updatePopper) == null ? void 0 : _b.call(_a);\n    });\n    var isSized = computed(function () {\n      return isUndefined(select.props.estimatedOptionHeight);\n    });\n    var listProps = computed(function () {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight\n        };\n      }\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: function itemSize(idx) {\n          return cachedHeights.value[idx];\n        }\n      };\n    });\n    var contains = function contains() {\n      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var target = arguments.length > 1 ? arguments[1] : undefined;\n      var valueKey = select.props.valueKey;\n      if (!isObject(target)) {\n        return arr.includes(target);\n      }\n      return arr && arr.some(function (item) {\n        return toRaw(get(item, valueKey)) === get(target, valueKey);\n      });\n    };\n    var isEqual = function isEqual(selected, target) {\n      if (!isObject(target)) {\n        return selected === target;\n      } else {\n        var valueKey = select.props.valueKey;\n        return get(selected, valueKey) === get(target, valueKey);\n      }\n    };\n    var isItemSelected = function isItemSelected(modelValue, target) {\n      if (select.props.multiple) {\n        return contains(modelValue, getValue(target));\n      }\n      return isEqual(modelValue, getValue(target));\n    };\n    var isItemDisabled = function isItemDisabled(modelValue, selected) {\n      var _select$props = select.props,\n        disabled = _select$props.disabled,\n        multiple = _select$props.multiple,\n        multipleLimit = _select$props.multipleLimit;\n      return disabled || !selected && (multiple ? multipleLimit > 0 && modelValue.length >= multipleLimit : false);\n    };\n    var isItemHovering = function isItemHovering(target) {\n      return props.hoveringIndex === target;\n    };\n    var scrollToItem = function scrollToItem(index) {\n      var list = listRef.value;\n      if (list) {\n        list.scrollToItem(index);\n      }\n    };\n    var resetScrollTop = function resetScrollTop() {\n      var list = listRef.value;\n      if (list) {\n        list.resetScrollTop();\n      }\n    };\n    expose({\n      listRef: listRef,\n      isSized: isSized,\n      isItemDisabled: isItemDisabled,\n      isItemHovering: isItemHovering,\n      isItemSelected: isItemSelected,\n      scrollToItem: scrollToItem,\n      resetScrollTop: resetScrollTop\n    });\n    var Item = function Item(itemProps) {\n      var index = itemProps.index,\n        data = itemProps.data,\n        style = itemProps.style;\n      var sized = unref(isSized);\n      var _unref = unref(listProps),\n        itemSize = _unref.itemSize,\n        estimatedSize = _unref.estimatedSize;\n      var modelValue = select.props.modelValue;\n      var onSelect = select.onSelect,\n        onHover = select.onHover;\n      var item = data[index];\n      if (item.type === \"Group\") {\n        return createVNode(GroupItem, {\n          \"item\": item,\n          \"style\": style,\n          \"height\": sized ? itemSize : estimatedSize\n        }, null);\n      }\n      var isSelected = isItemSelected(modelValue, item);\n      var isDisabled = isItemDisabled(modelValue, isSelected);\n      var isHovering = isItemHovering(index);\n      return createVNode(OptionItem, mergeProps(itemProps, {\n        \"selected\": isSelected,\n        \"disabled\": getDisabled(item) || isDisabled,\n        \"created\": !!item.created,\n        \"hovering\": isHovering,\n        \"item\": item,\n        \"onSelect\": onSelect,\n        \"onHover\": onHover\n      }), {\n        \"default\": function _default(props2) {\n          var _a;\n          return ((_a = slots[\"default\"]) == null ? void 0 : _a.call(slots, props2)) || createVNode(\"span\", null, [getLabel(item)]);\n        }\n      });\n    };\n    var onKeyboardNavigate = select.onKeyboardNavigate,\n      onKeyboardSelect = select.onKeyboardSelect;\n    var onForward = function onForward() {\n      onKeyboardNavigate(\"forward\");\n    };\n    var onBackward = function onBackward() {\n      onKeyboardNavigate(\"backward\");\n    };\n    var onEscOrTab = function onEscOrTab() {\n      select.expanded = false;\n    };\n    var onKeydown = function onKeydown(e) {\n      var code = e.code;\n      var tab = EVENT_CODE.tab,\n        esc = EVENT_CODE.esc,\n        down = EVENT_CODE.down,\n        up = EVENT_CODE.up,\n        enter = EVENT_CODE.enter;\n      if (code !== tab) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      switch (code) {\n        case tab:\n        case esc:\n          {\n            onEscOrTab();\n            break;\n          }\n        case down:\n          {\n            onForward();\n            break;\n          }\n        case up:\n          {\n            onBackward();\n            break;\n          }\n        case enter:\n          {\n            onKeyboardSelect();\n            break;\n          }\n      }\n    };\n    return function () {\n      var _a;\n      var data = props.data,\n        width = props.width;\n      var _select$props2 = select.props,\n        height = _select$props2.height,\n        multiple = _select$props2.multiple,\n        scrollbarAlwaysOn = _select$props2.scrollbarAlwaysOn;\n      if (data.length === 0) {\n        return createVNode(\"div\", {\n          \"class\": ns.b(\"dropdown\"),\n          \"style\": {\n            width: \"\".concat(width, \"px\")\n          }\n        }, [(_a = slots.empty) == null ? void 0 : _a.call(slots)]);\n      }\n      var List = unref(isSized) ? FixedSizeList : DynamicSizeList;\n      return createVNode(\"div\", {\n        \"class\": [ns.b(\"dropdown\"), ns.is(\"multiple\", multiple)]\n      }, [createVNode(List, mergeProps({\n        \"ref\": listRef\n      }, unref(listProps), {\n        \"className\": ns.be(\"dropdown\", \"list\"),\n        \"scrollbarAlwaysOn\": scrollbarAlwaysOn,\n        \"data\": data,\n        \"height\": height,\n        \"width\": width,\n        \"total\": data.length,\n        \"onKeydown\": onKeydown\n      }), {\n        \"default\": function _default(props2) {\n          return createVNode(Item, props2, null);\n        }\n      })]);\n    };\n  }\n});\nexport { ElSelectMenu as default };","map":{"version":3,"names":["ElSelectMenu","defineComponent","name","props","data","type","Array","required","hoveringIndex","Number","width","slots","_ref","expose","select","inject","selectV2InjectionKey","ns","useNamespace","_useProps","useProps","getLabel","getValue","getDisabled","cachedHeights","ref","listRef","size","computed","length","watch","value","_a","_b","popper","updatePopper","call","isSized","isUndefined","estimatedOptionHeight","listProps","itemSize","itemHeight","estimatedSize","idx","contains","arr","arguments","undefined","target","valueKey","isObject","includes","some","item","toRaw","get","isEqual","selected","isItemSelected","modelValue","multiple","isItemDisabled","_select$props","disabled","multipleLimit","isItemHovering","scrollToItem","index","list","resetScrollTop","Item","itemProps","sized","unref","_unref","onSelect","onHover","createVNode","GroupItem","style","isSelected","isDisabled","isHovering","OptionItem","mergeProps","created","_default","props2","onKeyboardNavigate","onKeyboardSelect","onForward","onBackward","onEscOrTab","expanded","onKeydown","e","tab","EVENT_CODE","esc","up","enter","preventDefault","stopPropagation","down","height","_select$props2","b","empty","List","FixedSizeList","DynamicSizeList","be","scrollbarAlwaysOn"],"sources":["../../../../../../packages/components/select-v2/src/select-dropdown.tsx"],"sourcesContent":["import {\n  computed,\n  defineComponent,\n  inject,\n  ref,\n  toRaw,\n  unref,\n  watch,\n} from 'vue'\nimport { get } from 'lodash-unified'\nimport { isObject, isUndefined } from '@element-plus/utils'\nimport {\n  DynamicSizeList,\n  FixedSizeList,\n} from '@element-plus/components/virtual-list'\nimport { useNamespace } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport GroupItem from './group-item.vue'\nimport OptionItem from './option-item.vue'\nimport { useProps } from './useProps'\n\nimport { selectV2InjectionKey } from './token'\n\nimport type { ItemProps } from '@element-plus/components/virtual-list'\nimport type { Option, OptionItemProps } from './select.types'\n\nexport default defineComponent({\n  name: 'ElSelectDropdown',\n\n  props: {\n    data: {\n      type: Array,\n      required: true,\n    },\n    hoveringIndex: Number,\n    width: Number,\n  },\n  setup(props, { slots, expose }) {\n    const select = inject(selectV2InjectionKey)!\n    const ns = useNamespace('select')\n    const { getLabel, getValue, getDisabled } = useProps(select.props)\n\n    const cachedHeights = ref<Array<number>>([])\n\n    const listRef = ref()\n\n    const size = computed(() => props.data.length)\n    watch(\n      () => size.value,\n      () => {\n        select.popper.value.updatePopper?.()\n      }\n    )\n\n    const isSized = computed(() =>\n      isUndefined(select.props.estimatedOptionHeight)\n    )\n    const listProps = computed(() => {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight,\n        }\n      }\n\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: (idx: number) => cachedHeights.value[idx],\n      }\n    })\n\n    const contains = (arr: Array<any> = [], target: any) => {\n      const {\n        props: { valueKey },\n      } = select\n\n      if (!isObject(target)) {\n        return arr.includes(target)\n      }\n\n      return (\n        arr &&\n        arr.some((item) => {\n          return toRaw(get(item, valueKey)) === get(target, valueKey)\n        })\n      )\n    }\n    const isEqual = (selected: unknown, target: unknown) => {\n      if (!isObject(target)) {\n        return selected === target\n      } else {\n        const { valueKey } = select.props\n        return get(selected, valueKey) === get(target, valueKey)\n      }\n    }\n\n    const isItemSelected = (modelValue: any[] | any, target: Option) => {\n      if (select.props.multiple) {\n        return contains(modelValue, getValue(target))\n      }\n      return isEqual(modelValue, getValue(target))\n    }\n\n    const isItemDisabled = (modelValue: any[] | any, selected: boolean) => {\n      const { disabled, multiple, multipleLimit } = select.props\n      return (\n        disabled ||\n        (!selected &&\n          (multiple\n            ? multipleLimit > 0 && modelValue.length >= multipleLimit\n            : false))\n      )\n    }\n\n    const isItemHovering = (target: number) => props.hoveringIndex === target\n\n    const scrollToItem = (index: number) => {\n      const list = listRef.value as any\n      if (list) {\n        list.scrollToItem(index)\n      }\n    }\n\n    const resetScrollTop = () => {\n      const list = listRef.value as any\n      if (list) {\n        list.resetScrollTop()\n      }\n    }\n\n    expose({\n      listRef,\n      isSized,\n\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n      scrollToItem,\n      resetScrollTop,\n    })\n\n    const Item = (itemProps: ItemProps<any>) => {\n      const { index, data, style } = itemProps\n      const sized = unref(isSized)\n      const { itemSize, estimatedSize } = unref(listProps)\n      const { modelValue } = select.props\n      const { onSelect, onHover } = select\n      const item = data[index]\n      if (item.type === 'Group') {\n        return (\n          <GroupItem\n            item={item}\n            style={style}\n            height={(sized ? itemSize : estimatedSize) as number}\n          />\n        )\n      }\n\n      const isSelected = isItemSelected(modelValue, item)\n      const isDisabled = isItemDisabled(modelValue, isSelected)\n      const isHovering = isItemHovering(index)\n      return (\n        <OptionItem\n          {...itemProps}\n          selected={isSelected}\n          disabled={getDisabled(item) || isDisabled}\n          created={!!item.created}\n          hovering={isHovering}\n          item={item}\n          onSelect={onSelect}\n          onHover={onHover}\n        >\n          {{\n            default: (props: OptionItemProps) =>\n              slots.default?.(props) || <span>{getLabel(item)}</span>,\n          }}\n        </OptionItem>\n      )\n    }\n\n    // computed\n    const { onKeyboardNavigate, onKeyboardSelect } = select\n\n    const onForward = () => {\n      onKeyboardNavigate('forward')\n    }\n\n    const onBackward = () => {\n      onKeyboardNavigate('backward')\n    }\n\n    const onEscOrTab = () => {\n      select.expanded = false\n    }\n\n    const onKeydown = (e: KeyboardEvent) => {\n      const { code } = e\n      const { tab, esc, down, up, enter } = EVENT_CODE\n      if (code !== tab) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      switch (code) {\n        case tab:\n        case esc: {\n          onEscOrTab()\n          break\n        }\n        case down: {\n          onForward()\n          break\n        }\n        case up: {\n          onBackward()\n          break\n        }\n        case enter: {\n          onKeyboardSelect()\n          break\n        }\n      }\n    }\n\n    return () => {\n      const { data, width } = props\n      const { height, multiple, scrollbarAlwaysOn } = select.props\n\n      if (data.length === 0) {\n        return (\n          <div\n            class={ns.b('dropdown')}\n            style={{\n              width: `${width}px`,\n            }}\n          >\n            {slots.empty?.()}\n          </div>\n        )\n      }\n\n      const List = unref(isSized) ? FixedSizeList : DynamicSizeList\n\n      return (\n        <div class={[ns.b('dropdown'), ns.is('multiple', multiple)]}>\n          <List\n            ref={listRef}\n            {...unref(listProps)}\n            className={ns.be('dropdown', 'list')}\n            scrollbarAlwaysOn={scrollbarAlwaysOn}\n            data={data}\n            height={height}\n            width={width}\n            total={data.length}\n            // @ts-ignore - dts problem\n            onKeydown={onKeydown}\n          >\n            {{\n              default: (props: ItemProps<any>) => <Item {...props} />,\n            }}\n          </List>\n        </div>\n      )\n    }\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
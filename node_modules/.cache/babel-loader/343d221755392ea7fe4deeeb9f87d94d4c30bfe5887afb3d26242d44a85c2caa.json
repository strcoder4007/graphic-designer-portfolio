{"ast":null,"code":"import _defineProperty from \"/Users/shubhamsingh/Projects/riny-designs/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/Users/shubhamsingh/Projects/riny-designs/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/shubhamsingh/Projects/riny-designs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/shubhamsingh/Projects/riny-designs/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { defineComponent, useAttrs as useAttrs$1, ref, computed, onMounted, openBlock, createBlock, unref, withCtx, createElementVNode, normalizeClass, normalizeStyle, createVNode, createElementBlock, Fragment, renderList, renderSlot, createTextVNode, toDisplayString, mergeProps, withKeys, withModifiers, createSlots } from 'vue';\nimport { debounce } from 'lodash-unified';\nimport { onClickOutside } from '@vueuse/core';\nimport { Loading } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../form/index.mjs';\nimport { autocompleteProps, autocompleteEmits } from './autocomplete.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useAttrs } from '../../../hooks/use-attrs/index.mjs';\nimport { useFormDisabled } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { generateId } from '../../../utils/rand.mjs';\nimport { isArray } from '@vue/shared';\nimport { throwError } from '../../../utils/error.mjs';\nimport { INPUT_EVENT, UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nvar _hoisted_1 = [\"aria-expanded\", \"aria-owns\"];\nvar _hoisted_2 = {\n  key: 0\n};\nvar _hoisted_3 = [\"id\", \"aria-selected\", \"onClick\"];\nvar COMPONENT_NAME = \"ElAutocomplete\";\nvar __default__ = defineComponent({\n  name: COMPONENT_NAME,\n  inheritAttrs: false\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: autocompleteProps,\n  emits: autocompleteEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var attrs = useAttrs();\n    var rawAttrs = useAttrs$1();\n    var disabled = useFormDisabled();\n    var ns = useNamespace(\"autocomplete\");\n    var inputRef = ref();\n    var regionRef = ref();\n    var popperRef = ref();\n    var listboxRef = ref();\n    var readonly = false;\n    var ignoreFocusEvent = false;\n    var suggestions = ref([]);\n    var highlightedIndex = ref(-1);\n    var dropdownWidth = ref(\"\");\n    var activated = ref(false);\n    var suggestionDisabled = ref(false);\n    var loading = ref(false);\n    var listboxId = computed(function () {\n      return ns.b(String(generateId()));\n    });\n    var styles = computed(function () {\n      return rawAttrs.style;\n    });\n    var suggestionVisible = computed(function () {\n      var isValidData = suggestions.value.length > 0;\n      return (isValidData || loading.value) && activated.value;\n    });\n    var suggestionLoading = computed(function () {\n      return !props.hideLoading && loading.value;\n    });\n    var refInput = computed(function () {\n      if (inputRef.value) {\n        return Array.from(inputRef.value.$el.querySelectorAll(\"input\"));\n      }\n      return [];\n    });\n    var onSuggestionShow = function onSuggestionShow() {\n      if (suggestionVisible.value) {\n        dropdownWidth.value = \"\".concat(inputRef.value.$el.offsetWidth, \"px\");\n      }\n    };\n    var onHide = function onHide() {\n      highlightedIndex.value = -1;\n    };\n    var getData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(queryString) {\n        var cb, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!suggestionDisabled.value) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              cb = function cb(suggestionList) {\n                loading.value = false;\n                if (suggestionDisabled.value) return;\n                if (isArray(suggestionList)) {\n                  suggestions.value = suggestionList;\n                  highlightedIndex.value = props.highlightFirstItem ? 0 : -1;\n                } else {\n                  throwError(COMPONENT_NAME, \"autocomplete suggestions must be an array\");\n                }\n              };\n              loading.value = true;\n              if (!isArray(props.fetchSuggestions)) {\n                _context.next = 8;\n                break;\n              }\n              cb(props.fetchSuggestions);\n              _context.next = 12;\n              break;\n            case 8:\n              _context.next = 10;\n              return props.fetchSuggestions(queryString, cb);\n            case 10:\n              result = _context.sent;\n              if (isArray(result)) cb(result);\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function getData(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var debouncedGetData = debounce(getData, props.debounce);\n    var handleInput = function handleInput(value) {\n      var valuePresented = !!value;\n      emit(INPUT_EVENT, value);\n      emit(UPDATE_MODEL_EVENT, value);\n      suggestionDisabled.value = false;\n      activated.value || (activated.value = valuePresented);\n      if (!props.triggerOnFocus && !value) {\n        suggestionDisabled.value = true;\n        suggestions.value = [];\n        return;\n      }\n      debouncedGetData(value);\n    };\n    var handleMouseDown = function handleMouseDown(event) {\n      var _a;\n      if (disabled.value) return;\n      if (((_a = event.target) == null ? void 0 : _a.tagName) !== \"INPUT\" || refInput.value.includes(document.activeElement)) {\n        activated.value = true;\n      }\n    };\n    var handleChange = function handleChange(value) {\n      emit(CHANGE_EVENT, value);\n    };\n    var handleFocus = function handleFocus(evt) {\n      if (!ignoreFocusEvent) {\n        activated.value = true;\n        emit(\"focus\", evt);\n        if (props.triggerOnFocus && !readonly) {\n          debouncedGetData(String(props.modelValue));\n        }\n      } else {\n        ignoreFocusEvent = false;\n      }\n    };\n    var handleBlur = function handleBlur(evt) {\n      setTimeout(function () {\n        var _a;\n        if ((_a = popperRef.value) == null ? void 0 : _a.isFocusInsideContent()) {\n          ignoreFocusEvent = true;\n          return;\n        }\n        activated.value && close();\n        emit(\"blur\", evt);\n      });\n    };\n    var handleClear = function handleClear() {\n      activated.value = false;\n      emit(UPDATE_MODEL_EVENT, \"\");\n      emit(\"clear\");\n    };\n    var handleKeyEnter = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (suggestionVisible.value && highlightedIndex.value >= 0 && highlightedIndex.value < suggestions.value.length) {\n                handleSelect(suggestions.value[highlightedIndex.value]);\n              } else if (props.selectWhenUnmatched) {\n                emit(\"select\", {\n                  value: props.modelValue\n                });\n                suggestions.value = [];\n                highlightedIndex.value = -1;\n              }\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function handleKeyEnter() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var handleKeyEscape = function handleKeyEscape(evt) {\n      if (suggestionVisible.value) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        close();\n      }\n    };\n    var close = function close() {\n      activated.value = false;\n    };\n    var focus = function focus() {\n      var _a;\n      (_a = inputRef.value) == null ? void 0 : _a.focus();\n    };\n    var blur = function blur() {\n      var _a;\n      (_a = inputRef.value) == null ? void 0 : _a.blur();\n    };\n    var handleSelect = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(item) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              emit(INPUT_EVENT, item[props.valueKey]);\n              emit(UPDATE_MODEL_EVENT, item[props.valueKey]);\n              emit(\"select\", item);\n              suggestions.value = [];\n              highlightedIndex.value = -1;\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return function handleSelect(_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    var highlight = function highlight(index) {\n      if (!suggestionVisible.value || loading.value) return;\n      if (index < 0) {\n        highlightedIndex.value = -1;\n        return;\n      }\n      if (index >= suggestions.value.length) {\n        index = suggestions.value.length - 1;\n      }\n      var suggestion = regionRef.value.querySelector(\".\".concat(ns.be(\"suggestion\", \"wrap\")));\n      var suggestionList = suggestion.querySelectorAll(\".\".concat(ns.be(\"suggestion\", \"list\"), \" li\"));\n      var highlightItem = suggestionList[index];\n      var scrollTop = suggestion.scrollTop;\n      var offsetTop = highlightItem.offsetTop,\n        scrollHeight = highlightItem.scrollHeight;\n      if (offsetTop + scrollHeight > scrollTop + suggestion.clientHeight) {\n        suggestion.scrollTop += scrollHeight;\n      }\n      if (offsetTop < scrollTop) {\n        suggestion.scrollTop -= scrollHeight;\n      }\n      highlightedIndex.value = index;\n      inputRef.value.ref.setAttribute(\"aria-activedescendant\", \"\".concat(listboxId.value, \"-item-\").concat(highlightedIndex.value));\n    };\n    onClickOutside(listboxRef, function () {\n      suggestionVisible.value && close();\n    });\n    onMounted(function () {\n      ;\n      inputRef.value.ref.setAttribute(\"role\", \"textbox\");\n      inputRef.value.ref.setAttribute(\"aria-autocomplete\", \"list\");\n      inputRef.value.ref.setAttribute(\"aria-controls\", \"id\");\n      inputRef.value.ref.setAttribute(\"aria-activedescendant\", \"\".concat(listboxId.value, \"-item-\").concat(highlightedIndex.value));\n      readonly = inputRef.value.ref.hasAttribute(\"readonly\");\n    });\n    expose({\n      highlightedIndex: highlightedIndex,\n      activated: activated,\n      loading: loading,\n      inputRef: inputRef,\n      popperRef: popperRef,\n      suggestions: suggestions,\n      handleSelect: handleSelect,\n      handleKeyEnter: handleKeyEnter,\n      focus: focus,\n      blur: blur,\n      close: close,\n      highlight: highlight\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(unref(ElTooltip), {\n        ref_key: \"popperRef\",\n        ref: popperRef,\n        visible: unref(suggestionVisible),\n        placement: _ctx.placement,\n        \"fallback-placements\": [\"bottom-start\", \"top-start\"],\n        \"popper-class\": [unref(ns).e(\"popper\"), _ctx.popperClass],\n        teleported: _ctx.teleported,\n        \"gpu-acceleration\": false,\n        pure: \"\",\n        \"manual-mode\": \"\",\n        effect: \"light\",\n        trigger: \"click\",\n        transition: \"\".concat(unref(ns).namespace.value, \"-zoom-in-top\"),\n        persistent: \"\",\n        role: \"listbox\",\n        onBeforeShow: onSuggestionShow,\n        onHide: onHide\n      }, {\n        content: withCtx(function () {\n          return [createElementVNode(\"div\", {\n            ref_key: \"regionRef\",\n            ref: regionRef,\n            \"class\": normalizeClass([unref(ns).b(\"suggestion\"), unref(ns).is(\"loading\", unref(suggestionLoading))]),\n            style: normalizeStyle(_defineProperty(_defineProperty({}, _ctx.fitInputWidth ? \"width\" : \"minWidth\", dropdownWidth.value), \"outline\", \"none\")),\n            role: \"region\"\n          }, [createVNode(unref(ElScrollbar), {\n            id: unref(listboxId),\n            tag: \"ul\",\n            \"wrap-class\": unref(ns).be(\"suggestion\", \"wrap\"),\n            \"view-class\": unref(ns).be(\"suggestion\", \"list\"),\n            role: \"listbox\"\n          }, {\n            \"default\": withCtx(function () {\n              return [unref(suggestionLoading) ? (openBlock(), createElementBlock(\"li\", _hoisted_2, [createVNode(unref(ElIcon), {\n                \"class\": normalizeClass(unref(ns).is(\"loading\"))\n              }, {\n                \"default\": withCtx(function () {\n                  return [createVNode(unref(Loading))];\n                }),\n                _: 1\n              }, 8, [\"class\"])])) : (openBlock(true), createElementBlock(Fragment, {\n                key: 1\n              }, renderList(suggestions.value, function (item, index) {\n                return openBlock(), createElementBlock(\"li\", {\n                  id: \"\".concat(unref(listboxId), \"-item-\").concat(index),\n                  key: index,\n                  \"class\": normalizeClass({\n                    highlighted: highlightedIndex.value === index\n                  }),\n                  role: \"option\",\n                  \"aria-selected\": highlightedIndex.value === index,\n                  onClick: function onClick($event) {\n                    return handleSelect(item);\n                  }\n                }, [renderSlot(_ctx.$slots, \"default\", {\n                  item: item\n                }, function () {\n                  return [createTextVNode(toDisplayString(item[_ctx.valueKey]), 1)];\n                })], 10, _hoisted_3);\n              }), 128))];\n            }),\n            _: 3\n          }, 8, [\"id\", \"wrap-class\", \"view-class\"])], 6)];\n        }),\n        \"default\": withCtx(function () {\n          return [createElementVNode(\"div\", {\n            ref_key: \"listboxRef\",\n            ref: listboxRef,\n            \"class\": normalizeClass([unref(ns).b(), _ctx.$attrs[\"class\"]]),\n            style: normalizeStyle(unref(styles)),\n            role: \"combobox\",\n            \"aria-haspopup\": \"listbox\",\n            \"aria-expanded\": unref(suggestionVisible),\n            \"aria-owns\": unref(listboxId)\n          }, [createVNode(unref(ElInput), mergeProps({\n            ref_key: \"inputRef\",\n            ref: inputRef\n          }, unref(attrs), {\n            clearable: _ctx.clearable,\n            disabled: unref(disabled),\n            name: _ctx.name,\n            \"model-value\": _ctx.modelValue,\n            onInput: handleInput,\n            onChange: handleChange,\n            onFocus: handleFocus,\n            onBlur: handleBlur,\n            onClear: handleClear,\n            onKeydown: [_cache[0] || (_cache[0] = withKeys(withModifiers(function ($event) {\n              return highlight(highlightedIndex.value - 1);\n            }, [\"prevent\"]), [\"up\"])), _cache[1] || (_cache[1] = withKeys(withModifiers(function ($event) {\n              return highlight(highlightedIndex.value + 1);\n            }, [\"prevent\"]), [\"down\"])), withKeys(handleKeyEnter, [\"enter\"]), withKeys(close, [\"tab\"]), withKeys(handleKeyEscape, [\"esc\"])],\n            onMousedown: handleMouseDown\n          }), createSlots({\n            _: 2\n          }, [_ctx.$slots.prepend ? {\n            name: \"prepend\",\n            fn: withCtx(function () {\n              return [renderSlot(_ctx.$slots, \"prepend\")];\n            })\n          } : void 0, _ctx.$slots.append ? {\n            name: \"append\",\n            fn: withCtx(function () {\n              return [renderSlot(_ctx.$slots, \"append\")];\n            })\n          } : void 0, _ctx.$slots.prefix ? {\n            name: \"prefix\",\n            fn: withCtx(function () {\n              return [renderSlot(_ctx.$slots, \"prefix\")];\n            })\n          } : void 0, _ctx.$slots.suffix ? {\n            name: \"suffix\",\n            fn: withCtx(function () {\n              return [renderSlot(_ctx.$slots, \"suffix\")];\n            })\n          } : void 0]), 1040, [\"clearable\", \"disabled\", \"name\", \"model-value\", \"onKeydown\"])], 14, _hoisted_1)];\n        }),\n        _: 3\n      }, 8, [\"visible\", \"placement\", \"popper-class\", \"teleported\", \"transition\"]);\n    };\n  }\n}));\nvar Autocomplete = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"autocomplete.vue\"]]);\nexport { Autocomplete as default };","map":{"version":3,"names":["name","COMPONENT_NAME","inheritAttrs","attrs","useAttrs","rawAttrs","useAttrs$1","disabled","useFormDisabled","ns","useNamespace","inputRef","ref","regionRef","popperRef","listboxRef","readonly","ignoreFocusEvent","suggestions","highlightedIndex","dropdownWidth","activated","suggestionDisabled","loading","listboxId","computed","b","String","generateId","styles","style","suggestionVisible","isValidData","value","length","suggestionLoading","props","hideLoading","refInput","Array","from","$el","querySelectorAll","onSuggestionShow","concat","offsetWidth","onHide","getData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","queryString","cb","result","wrap","_callee$","_context","prev","next","abrupt","suggestionList","isArray","highlightFirstItem","throwError","fetchSuggestions","sent","stop","_x","apply","arguments","debouncedGetData","debounce","handleInput","valuePresented","emit","INPUT_EVENT","UPDATE_MODEL_EVENT","triggerOnFocus","handleMouseDown","event","_a","target","tagName","includes","document","activeElement","handleChange","CHANGE_EVENT","handleFocus","evt","modelValue","handleBlur","setTimeout","isFocusInsideContent","close","handleClear","handleKeyEnter","_ref3","_callee2","_callee2$","_context2","handleSelect","selectWhenUnmatched","handleKeyEscape","preventDefault","stopPropagation","focus","blur","_ref4","_callee3","item","_callee3$","_context3","valueKey","_x2","highlight","index","suggestion","querySelector","be","highlightItem","scrollTop","offsetTop","scrollHeight","clientHeight","setAttribute","onClickOutside","onMounted","hasAttribute","expose"],"sources":["../../../../../../packages/components/autocomplete/src/autocomplete.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"popperRef\"\n    :visible=\"suggestionVisible\"\n    :placement=\"placement\"\n    :fallback-placements=\"['bottom-start', 'top-start']\"\n    :popper-class=\"[ns.e('popper'), popperClass]\"\n    :teleported=\"teleported\"\n    :gpu-acceleration=\"false\"\n    pure\n    manual-mode\n    effect=\"light\"\n    trigger=\"click\"\n    :transition=\"`${ns.namespace.value}-zoom-in-top`\"\n    persistent\n    role=\"listbox\"\n    @before-show=\"onSuggestionShow\"\n    @hide=\"onHide\"\n  >\n    <div\n      ref=\"listboxRef\"\n      :class=\"[ns.b(), $attrs.class]\"\n      :style=\"styles\"\n      role=\"combobox\"\n      aria-haspopup=\"listbox\"\n      :aria-expanded=\"suggestionVisible\"\n      :aria-owns=\"listboxId\"\n    >\n      <el-input\n        ref=\"inputRef\"\n        v-bind=\"attrs\"\n        :clearable=\"clearable\"\n        :disabled=\"disabled\"\n        :name=\"name\"\n        :model-value=\"modelValue\"\n        @input=\"handleInput\"\n        @change=\"handleChange\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n        @clear=\"handleClear\"\n        @keydown.up.prevent=\"highlight(highlightedIndex - 1)\"\n        @keydown.down.prevent=\"highlight(highlightedIndex + 1)\"\n        @keydown.enter=\"handleKeyEnter\"\n        @keydown.tab=\"close\"\n        @keydown.esc=\"handleKeyEscape\"\n        @mousedown=\"handleMouseDown\"\n      >\n        <template v-if=\"$slots.prepend\" #prepend>\n          <slot name=\"prepend\" />\n        </template>\n        <template v-if=\"$slots.append\" #append>\n          <slot name=\"append\" />\n        </template>\n        <template v-if=\"$slots.prefix\" #prefix>\n          <slot name=\"prefix\" />\n        </template>\n        <template v-if=\"$slots.suffix\" #suffix>\n          <slot name=\"suffix\" />\n        </template>\n      </el-input>\n    </div>\n    <template #content>\n      <div\n        ref=\"regionRef\"\n        :class=\"[ns.b('suggestion'), ns.is('loading', suggestionLoading)]\"\n        :style=\"{\n          [fitInputWidth ? 'width' : 'minWidth']: dropdownWidth,\n          outline: 'none',\n        }\"\n        role=\"region\"\n      >\n        <el-scrollbar\n          :id=\"listboxId\"\n          tag=\"ul\"\n          :wrap-class=\"ns.be('suggestion', 'wrap')\"\n          :view-class=\"ns.be('suggestion', 'list')\"\n          role=\"listbox\"\n        >\n          <li v-if=\"suggestionLoading\">\n            <el-icon :class=\"ns.is('loading')\">\n              <Loading />\n            </el-icon>\n          </li>\n          <template v-else>\n            <li\n              v-for=\"(item, index) in suggestions\"\n              :id=\"`${listboxId}-item-${index}`\"\n              :key=\"index\"\n              :class=\"{ highlighted: highlightedIndex === index }\"\n              role=\"option\"\n              :aria-selected=\"highlightedIndex === index\"\n              @click=\"handleSelect(item)\"\n            >\n              <slot :item=\"item\">{{ item[valueKey] }}</slot>\n            </li>\n          </template>\n        </el-scrollbar>\n      </div>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, onMounted, ref, useAttrs as useRawAttrs } from 'vue'\nimport { debounce } from 'lodash-unified'\nimport { onClickOutside } from '@vueuse/core'\nimport { Loading } from '@element-plus/icons-vue'\nimport { useAttrs, useNamespace } from '@element-plus/hooks'\nimport { generateId, isArray, throwError } from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport ElInput from '@element-plus/components/input'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElIcon from '@element-plus/components/icon'\nimport { useFormDisabled } from '@element-plus/components/form'\nimport { autocompleteEmits, autocompleteProps } from './autocomplete'\nimport type { AutocompleteData } from './autocomplete'\n\nimport type { StyleValue } from 'vue'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\nimport type { InputInstance } from '@element-plus/components/input'\n\nconst COMPONENT_NAME = 'ElAutocomplete'\ndefineOptions({\n  name: COMPONENT_NAME,\n  inheritAttrs: false,\n})\n\nconst props = defineProps(autocompleteProps)\nconst emit = defineEmits(autocompleteEmits)\n\nconst attrs = useAttrs()\nconst rawAttrs = useRawAttrs()\nconst disabled = useFormDisabled()\nconst ns = useNamespace('autocomplete')\n\nconst inputRef = ref<InputInstance>()\nconst regionRef = ref<HTMLElement>()\nconst popperRef = ref<TooltipInstance>()\nconst listboxRef = ref<HTMLElement>()\n\nlet readonly = false\nlet ignoreFocusEvent = false\nconst suggestions = ref<AutocompleteData>([])\nconst highlightedIndex = ref(-1)\nconst dropdownWidth = ref('')\nconst activated = ref(false)\nconst suggestionDisabled = ref(false)\nconst loading = ref(false)\n\nconst listboxId = computed(() => ns.b(String(generateId())))\nconst styles = computed(() => rawAttrs.style as StyleValue)\n\nconst suggestionVisible = computed(() => {\n  const isValidData = suggestions.value.length > 0\n  return (isValidData || loading.value) && activated.value\n})\n\nconst suggestionLoading = computed(() => !props.hideLoading && loading.value)\n\nconst refInput = computed<HTMLInputElement[]>(() => {\n  if (inputRef.value) {\n    return Array.from<HTMLInputElement>(\n      inputRef.value.$el.querySelectorAll('input')\n    )\n  }\n  return []\n})\n\nconst onSuggestionShow = () => {\n  if (suggestionVisible.value) {\n    dropdownWidth.value = `${inputRef.value!.$el.offsetWidth}px`\n  }\n}\n\nconst onHide = () => {\n  highlightedIndex.value = -1\n}\n\nconst getData = async (queryString: string) => {\n  if (suggestionDisabled.value) return\n\n  const cb = (suggestionList: AutocompleteData) => {\n    loading.value = false\n    if (suggestionDisabled.value) return\n\n    if (isArray(suggestionList)) {\n      suggestions.value = suggestionList\n      highlightedIndex.value = props.highlightFirstItem ? 0 : -1\n    } else {\n      throwError(COMPONENT_NAME, 'autocomplete suggestions must be an array')\n    }\n  }\n\n  loading.value = true\n  if (isArray(props.fetchSuggestions)) {\n    cb(props.fetchSuggestions)\n  } else {\n    const result = await props.fetchSuggestions(queryString, cb)\n    if (isArray(result)) cb(result)\n  }\n}\nconst debouncedGetData = debounce(getData, props.debounce)\n\nconst handleInput = (value: string) => {\n  const valuePresented = !!value\n\n  emit(INPUT_EVENT, value)\n  emit(UPDATE_MODEL_EVENT, value)\n\n  suggestionDisabled.value = false\n  activated.value ||= valuePresented\n\n  if (!props.triggerOnFocus && !value) {\n    suggestionDisabled.value = true\n    suggestions.value = []\n    return\n  }\n\n  debouncedGetData(value)\n}\n\nconst handleMouseDown = (event: MouseEvent) => {\n  if (disabled.value) return\n  if (\n    (event.target as HTMLElement)?.tagName !== 'INPUT' ||\n    refInput.value.includes(document.activeElement as HTMLInputElement)\n  ) {\n    activated.value = true\n  }\n}\n\nconst handleChange = (value: string) => {\n  emit(CHANGE_EVENT, value)\n}\n\nconst handleFocus = (evt: FocusEvent) => {\n  if (!ignoreFocusEvent) {\n    activated.value = true\n    emit('focus', evt)\n\n    if (props.triggerOnFocus && !readonly) {\n      debouncedGetData(String(props.modelValue))\n    }\n  } else {\n    ignoreFocusEvent = false\n  }\n}\n\nconst handleBlur = (evt: FocusEvent) => {\n  setTimeout(() => {\n    // validate current focus event is inside el-tooltip-content\n    // if so, ignore the blur event and the next focus event\n    if (popperRef.value?.isFocusInsideContent()) {\n      ignoreFocusEvent = true\n      return\n    }\n    activated.value && close()\n    emit('blur', evt)\n  })\n}\n\nconst handleClear = () => {\n  activated.value = false\n  emit(UPDATE_MODEL_EVENT, '')\n  emit('clear')\n}\n\nconst handleKeyEnter = async () => {\n  if (\n    suggestionVisible.value &&\n    highlightedIndex.value >= 0 &&\n    highlightedIndex.value < suggestions.value.length\n  ) {\n    handleSelect(suggestions.value[highlightedIndex.value])\n  } else if (props.selectWhenUnmatched) {\n    emit('select', { value: props.modelValue })\n    suggestions.value = []\n    highlightedIndex.value = -1\n  }\n}\n\nconst handleKeyEscape = (evt: Event) => {\n  if (suggestionVisible.value) {\n    evt.preventDefault()\n    evt.stopPropagation()\n    close()\n  }\n}\n\nconst close = () => {\n  activated.value = false\n}\n\nconst focus = () => {\n  inputRef.value?.focus()\n}\n\nconst blur = () => {\n  inputRef.value?.blur()\n}\n\nconst handleSelect = async (item: any) => {\n  emit(INPUT_EVENT, item[props.valueKey])\n  emit(UPDATE_MODEL_EVENT, item[props.valueKey])\n  emit('select', item)\n  suggestions.value = []\n  highlightedIndex.value = -1\n}\n\nconst highlight = (index: number) => {\n  if (!suggestionVisible.value || loading.value) return\n\n  if (index < 0) {\n    highlightedIndex.value = -1\n    return\n  }\n\n  if (index >= suggestions.value.length) {\n    index = suggestions.value.length - 1\n  }\n  const suggestion = regionRef.value!.querySelector(\n    `.${ns.be('suggestion', 'wrap')}`\n  )!\n  const suggestionList = suggestion.querySelectorAll<HTMLElement>(\n    `.${ns.be('suggestion', 'list')} li`\n  )!\n  const highlightItem = suggestionList[index]\n  const scrollTop = suggestion.scrollTop\n  const { offsetTop, scrollHeight } = highlightItem\n\n  if (offsetTop + scrollHeight > scrollTop + suggestion.clientHeight) {\n    suggestion.scrollTop += scrollHeight\n  }\n  if (offsetTop < scrollTop) {\n    suggestion.scrollTop -= scrollHeight\n  }\n  highlightedIndex.value = index\n  // TODO: use Volar generate dts to fix it.\n  ;(inputRef.value as any).ref!.setAttribute(\n    'aria-activedescendant',\n    `${listboxId.value}-item-${highlightedIndex.value}`\n  )\n}\n\nonClickOutside(listboxRef, () => {\n  suggestionVisible.value && close()\n})\n\nonMounted(() => {\n  // TODO: use Volar generate dts to fix it.\n  ;(inputRef.value as any).ref!.setAttribute('role', 'textbox')\n  ;(inputRef.value as any).ref!.setAttribute('aria-autocomplete', 'list')\n  ;(inputRef.value as any).ref!.setAttribute('aria-controls', 'id')\n  ;(inputRef.value as any).ref!.setAttribute(\n    'aria-activedescendant',\n    `${listboxId.value}-item-${highlightedIndex.value}`\n  )\n  // get readonly attr\n  readonly = (inputRef.value as any).ref!.hasAttribute('readonly')\n})\n\ndefineExpose({\n  /** @description the index of the currently highlighted item */\n  highlightedIndex,\n  /** @description autocomplete whether activated */\n  activated,\n  /** @description remote search loading status */\n  loading,\n  /** @description el-input component instance */\n  inputRef,\n  /** @description el-tooltip component instance */\n  popperRef,\n  /** @description fetch suggestions result */\n  suggestions,\n  /** @description triggers when a suggestion is clicked */\n  handleSelect,\n  /** @description handle keyboard enter event */\n  handleKeyEnter,\n  /** @description focus the input element */\n  focus,\n  /** @description blur the input element */\n  blur,\n  /** @description close suggestion */\n  close,\n  /** @description highlight an item in a suggestion */\n  highlight,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
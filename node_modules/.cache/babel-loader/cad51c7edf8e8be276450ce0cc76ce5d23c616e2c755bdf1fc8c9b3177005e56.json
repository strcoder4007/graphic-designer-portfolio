{"ast":null,"code":"import _objectSpread from \"/Users/shubhamsingh/Projects/riny-designs/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { toRefs, computed, nextTick } from 'vue';\nimport { pick } from 'lodash-unified';\nimport { ElSelect } from '../../select/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../constants/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nvar useSelect = function useSelect(props, _ref, _ref2) {\n  var attrs = _ref.attrs,\n    emit = _ref.emit;\n  var tree = _ref2.tree,\n    key = _ref2.key;\n  var ns = useNamespace(\"tree-select\");\n  var result = _objectSpread(_objectSpread(_objectSpread({}, pick(toRefs(props), Object.keys(ElSelect.props))), attrs), {}, {\n    \"onUpdate:modelValue\": function onUpdateModelValue(value) {\n      return emit(UPDATE_MODEL_EVENT, value);\n    },\n    valueKey: key,\n    popperClass: computed(function () {\n      var classes = [ns.e(\"popper\")];\n      if (props.popperClass) classes.push(props.popperClass);\n      return classes.join(\" \");\n    }),\n    filterMethod: function filterMethod() {\n      var keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      if (props.filterMethod) props.filterMethod(keyword);\n      nextTick(function () {\n        var _a;\n        (_a = tree.value) == null ? void 0 : _a.filter(keyword);\n      });\n    },\n    onVisibleChange: function onVisibleChange(visible) {\n      var _a;\n      (_a = attrs.onVisibleChange) == null ? void 0 : _a.call(attrs, visible);\n      if (props.filterable && visible) {\n        result.filterMethod();\n      }\n    }\n  });\n  return result;\n};\nexport { useSelect };","map":{"version":3,"names":["useSelect","props","_ref","_ref2","attrs","emit","tree","key","ns","useNamespace","result","_objectSpread","pick","toRefs","Object","keys","ElSelect","onUpdateModelValue","value","UPDATE_MODEL_EVENT","valueKey","popperClass","computed","classes","e","push","join","filterMethod","keyword","arguments","length","undefined","nextTick","_a","filter","onVisibleChange","visible","call","filterable"],"sources":["../../../../../../packages/components/tree-select/src/select.ts"],"sourcesContent":["// @ts-nocheck\nimport { computed, nextTick, toRefs } from 'vue'\nimport { pick } from 'lodash-unified'\nimport ElSelect from '@element-plus/components/select'\nimport { useNamespace } from '@element-plus/hooks'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport type { Ref } from 'vue'\nimport type ElTree from '@element-plus/components/tree'\n\nexport const useSelect = (\n  props,\n  { attrs, emit },\n  {\n    tree,\n    key,\n  }: {\n    select: Ref<InstanceType<typeof ElSelect> | undefined>\n    tree: Ref<InstanceType<typeof ElTree> | undefined>\n    key: Ref<string>\n  }\n) => {\n  const ns = useNamespace('tree-select')\n\n  const result = {\n    ...pick(toRefs(props), Object.keys(ElSelect.props)),\n    ...attrs,\n    // attrs is not reactive, when v-model binding source changes,\n    // this listener is still old, see the bug(or test 'v-model source change'):\n    // https://github.com/element-plus/element-plus/issues/14204\n    'onUpdate:modelValue': (value) => emit(UPDATE_MODEL_EVENT, value),\n    valueKey: key,\n    popperClass: computed(() => {\n      const classes = [ns.e('popper')]\n      if (props.popperClass) classes.push(props.popperClass)\n      return classes.join(' ')\n    }),\n    filterMethod: (keyword = '') => {\n      if (props.filterMethod) props.filterMethod(keyword)\n\n      nextTick(() => {\n        // let tree node expand only, same with tree filter\n        tree.value?.filter(keyword)\n      })\n    },\n    // clear filter text when visible change\n    onVisibleChange: (visible: boolean) => {\n      attrs.onVisibleChange?.(visible)\n\n      if (props.filterable && visible) {\n        result.filterMethod()\n      }\n    },\n  }\n\n  return result\n}\n"],"mappings":";;;;;;;;;;;;;AAKY,IAACA,SAAS,GAAG,SAAZA,SAASA,CAAIC,KAAK,EAAAC,IAAA,EAAAC,KAAA,EAGzB;EAAA,IAH6BC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,IAAI,GAAAH,IAAA,CAAJG,IAAI;EAAA,IAC5CC,IAAI,GAAAH,KAAA,CAAJG,IAAI;IACJC,GAAG,GAAAJ,KAAA,CAAHI,GAAG;EAEH,IAAMC,EAAE,GAAGC,YAAY,CAAC,aAAa,CAAC;EACtC,IAAMC,MAAM,GAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACPC,IAAI,CAACC,MAAM,CAACZ,KAAK,CAAC,EAAEa,MAAM,CAACC,IAAI,CAACC,QAAQ,CAACf,KAAK,CAAC,CAAC,GAChDG,KAAK;IACR,qBAAqB,EAAE,SAAAa,mBAACC,KAAK;MAAA,OAAKb,IAAI,CAACc,kBAAkB,EAAED,KAAK,CAAC;IAAA;IACjEE,QAAQ,EAAEb,GAAG;IACbc,WAAW,EAAEC,QAAQ,CAAC,YAAM;MAC1B,IAAMC,OAAO,GAAG,CAACf,EAAE,CAACgB,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,IAAIvB,KAAK,CAACoB,WAAW,EACnBE,OAAO,CAACE,IAAI,CAACxB,KAAK,CAACoB,WAAW,CAAC;MACjC,OAAOE,OAAO,CAACG,IAAI,CAAC,GAAG,CAAC;IAC9B,CAAK,CAAC;IACFC,YAAY,EAAE,SAAAA,aAAA,EAAkB;MAAA,IAAjBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;MACzB,IAAI5B,KAAK,CAAC0B,YAAY,EACpB1B,KAAK,CAAC0B,YAAY,CAACC,OAAO,CAAC;MAC7BI,QAAQ,CAAC,YAAM;QACb,IAAIC,EAAE;QACN,CAACA,EAAE,GAAG3B,IAAI,CAACY,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGe,EAAE,CAACC,MAAM,CAACN,OAAO,CAAC;MAC/D,CAAO,CAAC;IACR,CAAK;IACDO,eAAe,EAAE,SAAAA,gBAACC,OAAO,EAAK;MAC5B,IAAIH,EAAE;MACN,CAACA,EAAE,GAAG7B,KAAK,CAAC+B,eAAe,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGF,EAAE,CAACI,IAAI,CAACjC,KAAK,EAAEgC,OAAO,CAAC;MACvE,IAAInC,KAAK,CAACqC,UAAU,IAAIF,OAAO,EAAE;QAC/B1B,MAAM,CAACiB,YAAY,EAAE;MAC7B;IACA;EAAK,EACF;EACD,OAAOjB,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}